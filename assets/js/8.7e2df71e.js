(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{245:function(a,t,s){"use strict";s.r(t);var r=s(0),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-语言的特征介绍-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-语言的特征介绍-类型","aria-hidden":"true"}},[a._v("#")]),a._v(" JavaScript 语言的特征介绍(类型)")]),a._v(" "),s("p",[a._v("JavaScript 是一种弱类型（或称动态类型）语言，即变量的类型是不确定的。")]),a._v(" "),s("h2",{attrs:{id:"弱类型和强类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弱类型和强类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 弱类型和强类型")]),a._v(" "),s("h3",{attrs:{id:"弱类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弱类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 弱类型")]),a._v(" "),s("p",[a._v("在定义变量的时候，我们可以为变量赋值任何数据，变量的数据类型不是固定死的，这样的类型叫做弱类型")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'abc'")]),a._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"强类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 强类型")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'10'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 错误，类型应该是整型")]),a._v("\n")])])]),s("h2",{attrs:{id:"动态类型和静态类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态类型和静态类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 动态类型和静态类型")]),a._v(" "),s("p",[a._v("动态类型和静态类型的核心区别： 动态类型的类型检查会在代码运行的时候运行，而静态类型的类型检查则是在编译时候进行")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code")])])])}),[],!1,null,null,null);t.default=e.exports}}]);