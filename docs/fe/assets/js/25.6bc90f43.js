(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{224:function(e,t,r){"use strict";r.r(t);var a=r(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Heap Wiki\n优先队列 PriorityQueue - 正常入、按照优先级出")]),e._v(" "),r("h2",{attrs:{id:"实现机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现机制","aria-hidden":"true"}},[e._v("#")]),e._v(" 实现机制")]),e._v(" "),r("ol",[r("li",[e._v("堆 Heap（Binary, Binomial, Fibonacci）")]),e._v(" "),r("li",[e._v("二叉搜索树 Binary Search Tree")])]),e._v(" "),r("ul",[r("li",[e._v("https://en.wikipedia.org/wiki/Heap_(data_structure) • Google 搜索 heap 或者 堆\n实战题⽬目")])]),e._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://leetcode.com/problems/kth-largest-element-in-a-stream/discuss/149050/Java-Priority-Queue",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://leetcode.com/problems/sliding-window-maximum/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 题 - 滑动窗口的最大值"),r("OutboundLink")],1)])]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[e._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);