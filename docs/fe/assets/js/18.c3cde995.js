(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{217:function(t,e,s){"use strict";s.r(e);var o=s(0),i=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Greedy Algorithms\n贪⼼心法，⼜又称贪⼼心算法、贪婪算法:在对问题求解 时，总是做出在当前看来是最好的选择。")]),t._v(" "),s("ol",[s("li",[t._v("什什么是贪⼼心算法")]),t._v(" "),s("li",[t._v("何种情况下⽤用到贪⼼心算法")])]),t._v(" "),s("h2",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("简单地说，问题能够分解成⼦子问题来解决，⼦子问题的最优解能递推到最终问题\n的最优解。这种⼦子问题最优解成为最优⼦子结构。")]),t._v(" "),s("p",[t._v("贪⼼心算法与动态规划的不不同在于它对每个⼦子问题的解决⽅方案都做出选择，不不能 回退。动态规划则会保存以前的运算结果，并根据以前的结果对当前进⾏行行选择， 有回退功能。")]),t._v(" "),s("ul",[s("li",[t._v("找零钱")])]),t._v(" "),s("h2",{attrs:{id:"实战题⽬"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战题⽬","aria-hidden":"true"}},[t._v("#")]),t._v(" 实战题⽬")]),t._v(" "),s("ol",[s("li",[t._v("https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/")]),t._v(" "),s("li",[t._v("https://leetcode.com/problems/lemonade-change/description/")]),t._v(" "),s("li",[t._v("https://leetcode.com/problems/assign-cookies/description/")]),t._v(" "),s("li",[t._v("https://leetcode.com/problems/walking-robot-simulation/description/")])])])}),[],!1,null,null,null);e.default=i.exports}}]);